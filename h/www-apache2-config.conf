

<VirtualHost *:80>
	ServerName controlPi2
	ServerAlias controlpi2.hebog99orjhcpdph.myfritz.net
	ServerAdmin julian@wiche.eu
        DocumentRoot /usr/local/ControlPi/www 

	<Directory /usr/local/ControlPi/www>
        	Options Indexes FollowSymLinks
        	AllowOverride None
        	Require all granted  
	</Directory>          

	# Rewrite for WebSocket (HTTP connections with upgrade Headers) to pass the proxy
	# Due to the rewrite on HTTPS, this should be without effect 
	RewriteEngine On
	RewriteCond %{HTTP:Upgrade} =websocket [NC]
	RewriteRule /(.*)           ws://localhost:8080/$1 [P,L]

	ProxyPassReverse / http://localhost:8080/

	# Redirect requests to HTTP resource to HTTPS resource (see VHOST below)
	RewriteCond %{SERVER_NAME} =controlPi2 [OR]
	RewriteCond %{SERVER_NAME} =controlpi2.hebog99orjhcpdph.myfritz.net
	RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>


<VirtualHost *:443>
	ServerName controlPi2
        ServerAlias controlpi2.hebog99orjhcpdph.myfritz.net
	ServerAdmin julian@wiche.eu
        DocumentRoot /usr/local/ControlPi/www 

	<Directory /usr/local/ControlPi/www>
        	Options Indexes FollowSymLinks
        	AllowOverride None
        	Require all granted  
	</Directory>          

	#Websocket-Proxy playground... for now it works like it is.. 
        # ProxyRequests Off
	#<Proxy *>
        #	Order deny,allow
        #	Allow from all
    	#</Proxy>
	#ProxyPass "/ws" "ws://localhost:8080"
	#ProxyPassReverse "/ws" "ws://localhost:8080"

	RewriteEngine On
	RewriteCond %{HTTP:Upgrade} =websocket [NC]
	RewriteRule /(.*)           ws://localhost:8080/$1 [P,L]

	ProxyPassReverse / http://localhost:8080/

	# TSL Certificates autmatically installed by certbot.	
	Include /etc/letsencrypt/options-ssl-apache.conf
	SSLCertificateFile /etc/letsencrypt/live/controlpi2.hebog99orjhcpdph.myfritz.net/fullchain.pem
	SSLCertificateKeyFile /etc/letsencrypt/live/controlpi2.hebog99orjhcpdph.myfritz.net/privkey.pem
</VirtualHost>
